- name: Build site for FITS microservice
  blockinfile:
    path: "{{ httpd_conf_directory }}/conf-available/CrayFits.conf"
    create: yes
    block: |
      Alias "/crayfits" "/var/www/html/CrayFits/public"
      <Directory "/var/www/html/CrayFits/public">
        FallbackResource /index.php
        Require {{ apache_allow_override }} granted
        DirectoryIndex index.php
        SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
      </Directory>

- name: Enable FITS site
  file:
    src: "{{ httpd_conf_directory }}conf-available/CrayFits.conf"
    dest: "{{ httpd_conf_directory }}conf-enabled/CrayFits.conf"
    state: link

- name: Change owner on html dir
  file:
    path: /var/www/html
    owner: {{ webserver_app_user }}
    group: {{ webserver_app_user }}

- name: Download islandora FITS module
  composer:
    command: require
    arguments: islandora-rdm/islandora_fits
    working_dir: "{{ drupal_core_path }}/.."
  become_user: "{{ ansible_user }}"

- name: Install Islandora FITS module
  command: "{{ drush_path }} --root {{ drupal_core_path }} -y en islandora_fits"

- name: Install FITS Microservice from Github
  git:
    repo: https://github.com/roblib/CrayFits.git
    dest: {{ crayfits_home }}/CrayFits
    force: yes

- name: Clean Directory (Failure okay)
  file:
    path: '{{ crayfits_home }}/CrayFits/vendor/symfony/monolog-bundle'
  with_items:
    - absent
    - directory
  ignore_errors: yes

- name: Change CrayFits directory ownership, group and permissions
  file:
    path: {{ crayfits_home }}/CrayFits
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    recurse: True

- name: Open file for logging
  file:
    path: {{ crayfits_home }}/CrayFits/var
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0777'
    recurse: True

- name: Restart apache
  service:
    name: apache2
    state: restarted
  become: true

- name: Check for Existing microservice
  stat:
    path: {{ crayfits_home }}/CrayFits/vendor
  register: crayfits

- name: Run Composer On Fits Microservice
  composer:
    command: update
    working_dir: {{ crayfits_home }}/CrayFits
  ignore_errors: yes
  when: crayfits.stat.exists == False
  become_user: "{{ ansible_user }}"
